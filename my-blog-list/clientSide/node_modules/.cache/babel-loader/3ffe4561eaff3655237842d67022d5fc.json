{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { AUTHENTICATED } from '../action/thunk';\nimport axios from \"axios\";\n\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\n\nvar valdateFields =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(values, dispatch) {\n    var res, errorObject;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.post(\"\".concat(URL, \"/signin\"), values);\n\n          case 3:\n            res = _context.sent;\n            setTimeout(function () {\n              localStorage.setItem(\"user\", res.data.token);\n            }, 3000);\n            dispatch({\n              type: AUTHENTICATED\n            }); // history.push(\"/addblog\");\n\n            _context.next = 13;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            errorObject = _context.t0.response.data.errors;\n            console.log(\"errorObject\", errorObject);\n            throw _objectSpread({}, errorObject);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 8]]);\n  }));\n\n  return function valdateFields(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var asyncValidate =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(values, dispatch) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", valdateFields(values, dispatch));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function asyncValidate(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // export const asyncValidate = (values , dispatch) => {\n//     return sleep(1000).then(() => { // simulate server latency\n//         if (['john', 'paul', 'george', 'ringo'].includes(values.email)) {\n//             throw { email: 'That username is taken' };\n//         }\n//     });\n// };\n\nexport var validate = function validate(values) {\n  var errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  }\n\n  if (!values.author) {\n    errors.author = 'Required';\n  }\n\n  return errors;\n};","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/valdate.js"],"names":["AUTHENTICATED","axios","sleep","ms","Promise","resolve","setTimeout","valdateFields","values","dispatch","post","URL","res","localStorage","setItem","data","token","type","errorObject","response","errors","console","log","asyncValidate","validate","email","password","author"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAd;AAAA,GAAnB,CAAJ;AAAA,CAAhB;;AAEA,IAAMI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,MAAP,EAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEIR,KAAK,CAACS,IAAN,WAAcC,GAAd,cAA4BH,MAA5B,CAFJ;;AAAA;AAERI,YAAAA,GAFQ;AAGdN,YAAAA,UAAU,CAAC,YAAM;AACbO,cAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACG,IAAJ,CAASC,KAAtC;AACH,aAFS,EAEP,IAFO,CAAV;AAIAP,YAAAA,QAAQ,CAAC;AAAEQ,cAAAA,IAAI,EAAEjB;AAAR,aAAD,CAAR,CAPc,CAQd;;AARc;AAAA;;AAAA;AAAA;AAAA;AAWRkB,YAAAA,WAXQ,GAWM,YAAMC,QAAN,CAAeJ,IAAf,CAAoBK,MAX1B;AAYdC,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA4BJ,WAA5B;AAZc,oCAcHA,WAdG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbX,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAkBA,OAAO,IAAMgB,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOf,MAAP,EAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,8CAClBF,aAAa,CAACC,MAAD,EAASC,QAAT,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbc,aAAa;AAAA;AAAA;AAAA,GAAnB,C,CAKP;AACA;AACA;AAEA;AACA;AACA;AACA;;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAhB,MAAM,EAAI;AAC9B,MAAMY,MAAM,GAAG,EAAf;;AACA,MAAI,CAACZ,MAAM,CAACiB,KAAZ,EAAmB;AACfL,IAAAA,MAAM,CAACK,KAAP,GAAe,UAAf;AACH;;AACD,MAAI,CAACjB,MAAM,CAACkB,QAAZ,EAAsB;AAClBN,IAAAA,MAAM,CAACM,QAAP,GAAkB,UAAlB;AACH;;AACD,MAAI,CAAClB,MAAM,CAACmB,MAAZ,EAAoB;AAChBP,IAAAA,MAAM,CAACO,MAAP,GAAgB,UAAhB;AACH;;AACD,SAAOP,MAAP;AACH,CAZM","sourcesContent":["import { AUTHENTICATED } from '../action/thunk';\nimport axios from \"axios\";\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst valdateFields = async (values, dispatch) => {\n    try {\n        const res = await axios.post(`${URL}/signin`, values);\n        setTimeout(() => {\n            localStorage.setItem(\"user\", res.data.token);\n        }, 3000);\n\n        dispatch({ type: AUTHENTICATED });\n        // history.push(\"/addblog\");\n\n    } catch (error) {\n        const errorObject = error.response.data.errors;\n        console.log(\"errorObject\" , errorObject);\n\n        throw { ...errorObject };\n    }\n\n}\nexport const asyncValidate = async (values, dispatch) => {\n    return valdateFields(values, dispatch);\n};\n\n\n// export const asyncValidate = (values , dispatch) => {\n//     return sleep(1000).then(() => { // simulate server latency\n//         if (['john', 'paul', 'george', 'ringo'].includes(values.email)) {\n\n//             throw { email: 'That username is taken' };\n//         }\n//     });\n// };\n\n\n\n\nexport const validate = values => {\n    const errors = {}\n    if (!values.email) {\n        errors.email = 'Required'\n    }\n    if (!values.password) {\n        errors.password = 'Required'\n    }\n    if (!values.author) {\n        errors.author = 'Required'\n    }\n    return errors;\n}\n\n"]},"metadata":{},"sourceType":"module"}