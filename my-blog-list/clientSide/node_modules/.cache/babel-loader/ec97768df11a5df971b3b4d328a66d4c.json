{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/ViewComments.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\nimport { reduxForm, Field } from \"redux-form\"; // import history from '../history/history';\n\nvar ViewComments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewComments, _Component);\n\n  function ViewComments() {\n    var _this;\n\n    _classCallCheck(this, ViewComments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewComments).call(this));\n    _this.getComments =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var blogId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              blogId = _this.props.match.params.blogid;\n              _context.next = 3;\n              return _this.props.getAllComments(blogId);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(ViewComments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getComments();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"all comments\", this.props.allComments);\n      return React.createElement(\"div\", {\n        className: \"Commits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.allComments.map(function (comment) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"  name : \", comment.name, \" \"), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"  comment : \", comment.comment, \" \"), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"  created at : \", comment.created_at, \" \"));\n      }));\n    }\n  }]);\n\n  return ViewComments;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    allComments: state.comments.allCommentsForblog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addComment: function addComment(blogId) {\n      return dispatch(thunks.addComment(blogId));\n    },\n    getAllComments: function getAllComments(blogId) {\n      return dispatch(thunks.getAllComments(blogId));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewComments);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/ViewComments.js"],"names":["React","Component","connect","thunks","Profile","reduxForm","Field","ViewComments","getComments","blogId","props","match","params","blogid","getAllComments","console","log","allComments","map","comment","name","created_at","mapStateToProps","state","comments","allCommentsForblog","mapDispatchToProps","dispatch","addComment"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC,C,CACA;;IAEMC,Y;;;;;AACF,0BAAc;AAAA;;AAAA;;AACV;AADU,UAWdC,WAXc;AAAA;AAAA;AAAA;AAAA,6BAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,cAAAA,MADI,GACK,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAD7B;AAAA;AAAA,qBAEJ,MAAKH,KAAL,CAAWI,cAAX,CAA0BL,MAA1B,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXA;AAAA;AAGb;;;;wCAEmB;AAChB,WAAKD,WAAL;AACH;;;6BAWQ;AACLO,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKN,KAAL,CAAWO,WAAvC;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKP,KAAL,CAAWO,WAAX,CAAuBC,GAAvB,CAA2B,UAAAC,OAAO,EAAI;AACnC,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAcA,OAAO,CAACC,IAAtB,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAiBD,OAAO,CAACA,OAAzB,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAoBA,OAAO,CAACE,UAA5B,MAHJ,CADJ;AAOH,OARA,CAFL,CADJ;AAeH;;;;EArCsBpB,S;;AAwC3B,SAASqB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHN,IAAAA,WAAW,EAAEM,KAAK,CAACC,QAAN,CAAeC;AADzB,GAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHC,IAAAA,UAAU,EAAE,oBAACnB,MAAD;AAAA,aAAYkB,QAAQ,CAACxB,MAAM,CAACyB,UAAP,CAAkBnB,MAAlB,CAAD,CAApB;AAAA,KADT;AAEDK,IAAAA,cAAc,EAAE,wBAACL,MAAD;AAAA,aACdkB,QAAQ,CAACxB,MAAM,CAACW,cAAP,CAAsBL,MAAtB,CAAD,CADM;AAAA;AAFf,GAAP;AAMH;;AAGD,eAAeP,OAAO,CAClBoB,eADkB,EAElBI,kBAFkB,CAAP,CAGbnB,YAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\nimport { reduxForm, Field } from \"redux-form\";\n// import history from '../history/history';\n\nclass ViewComments extends Component {\n    constructor() {\n        super()\n\n    }\n\n    componentDidMount() {\n        this.getComments();\n    }\n\n\n\n    getComments = async () => {\n        const blogId = this.props.match.params.blogid;\n        await this.props.getAllComments(blogId);\n    }\n\n\n\n    render() {\n        console.log(\"all comments\", this.props.allComments);\n\n        return (\n            <div className=\"Commits\">\n\n                {this.props.allComments.map(comment => {\n                    return (\n                        <div>\n                            <li>  name : {comment.name} </li>\n                            <li>  comment : {comment.comment} </li>\n                            <li>  created at : {comment.created_at} </li>\n                        </div>\n                    );\n                })}\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        allComments: state.comments.allCommentsForblog,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addComment: (blogId) => dispatch(thunks.addComment(blogId))\n        , getAllComments: (blogId) =>\n            dispatch(thunks.getAllComments(blogId)),\n\n    };\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewComments);\n"]},"metadata":{},"sourceType":"module"}