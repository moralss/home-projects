{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { AUTHENTICATED } from '../action/thunk';\nimport axios from \"axios\";\nvar URL = \"http://localhost:3001\";\n\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\n\nvar valdateFields =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(values, dispatch) {\n    var res, errorObject;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"values\", values);\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.post(\"\".concat(URL, \"/signin\"), values);\n\n          case 4:\n            res = _context.sent;\n            dispatch({\n              type: AUTHENTICATED\n            }); // history.push(\"/addblog\");\n\n            _context.next = 14;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(\"response\", _context.t0);\n            errorObject = _context.t0.response.data.errors;\n            console.log(\"errorObject\", errorObject);\n            throw _objectSpread({}, errorObject);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[1, 8]]);\n  }));\n\n  return function valdateFields(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var asyncValidate =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(values, dispatch) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", valdateFields(values, dispatch));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function asyncValidate(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // export const asyncValidate = (values , dispatch) => {\n//     return sleep(1000).then(() => { // simulate server latency\n//         if (['john', 'paul', 'george', 'ringo'].includes(values.email)) {\n//             throw { email: 'That username is taken' };\n//         }\n//     });\n// };\n\nexport var validate = function validate(values) {\n  var errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  }\n\n  if (!values.author) {\n    errors.author = 'Required';\n  }\n\n  return errors;\n};","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/valdate.js"],"names":["AUTHENTICATED","axios","URL","sleep","ms","Promise","resolve","setTimeout","valdateFields","values","dispatch","console","log","post","res","type","errorObject","response","data","errors","asyncValidate","validate","email","password","author"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAMC,GAAG,GAAG,uBAAZ;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAd;AAAA,GAAnB,CAAJ;AAAA,CAAhB;;AAEA,IAAMI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,MAAP,EAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAuBH,MAAvB;AADkB;AAAA;AAAA,mBAGIR,KAAK,CAACY,IAAN,WAAcX,GAAd,cAA4BO,MAA5B,CAHJ;;AAAA;AAGRK,YAAAA,GAHQ;AAIdJ,YAAAA,QAAQ,CAAC;AAAEK,cAAAA,IAAI,EAAEf;AAAR,aAAD,CAAR,CAJc,CAKd;;AALc;AAAA;;AAAA;AAAA;AAAA;AAQdW,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACMI,YAAAA,WATQ,GASM,YAAMC,QAAN,CAAeC,IAAf,CAAoBC,MAT1B;AAUdR,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA4BI,WAA5B;AAVc,oCAYHA,WAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbR,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAgBA,OAAO,IAAMY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOX,MAAP,EAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,8CAClBF,aAAa,CAACC,MAAD,EAASC,QAAT,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbU,aAAa;AAAA;AAAA;AAAA,GAAnB,C,CAKP;AACA;AACA;AAEA;AACA;AACA;AACA;;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAZ,MAAM,EAAI;AAC9B,MAAMU,MAAM,GAAG,EAAf;;AACA,MAAI,CAACV,MAAM,CAACa,KAAZ,EAAmB;AACfH,IAAAA,MAAM,CAACG,KAAP,GAAe,UAAf;AACH;;AACD,MAAI,CAACb,MAAM,CAACc,QAAZ,EAAsB;AAClBJ,IAAAA,MAAM,CAACI,QAAP,GAAkB,UAAlB;AACH;;AACD,MAAI,CAACd,MAAM,CAACe,MAAZ,EAAoB;AAChBL,IAAAA,MAAM,CAACK,MAAP,GAAgB,UAAhB;AACH;;AACD,SAAOL,MAAP;AACH,CAZM","sourcesContent":["import { AUTHENTICATED } from '../action/thunk';\nimport axios from \"axios\";\nconst URL = \"http://localhost:3001\";\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst valdateFields = async (values, dispatch) => {\n    console.log(\"values\" , values);\n    try {\n        const res = await axios.post(`${URL}/signin`, values);\n        dispatch({ type: AUTHENTICATED });\n        // history.push(\"/addblog\");\n\n    } catch (error) {\n        console.log(\"response\" , error)\n        const errorObject = error.response.data.errors;\n        console.log(\"errorObject\" , errorObject);\n\n        throw { ...errorObject };\n    }\n\n}\nexport const asyncValidate = async (values, dispatch) => {\n    return valdateFields(values, dispatch);\n};\n\n\n// export const asyncValidate = (values , dispatch) => {\n//     return sleep(1000).then(() => { // simulate server latency\n//         if (['john', 'paul', 'george', 'ringo'].includes(values.email)) {\n\n//             throw { email: 'That username is taken' };\n//         }\n//     });\n// };\n\n\n\n\nexport const validate = values => {\n    const errors = {}\n    if (!values.email) {\n        errors.email = 'Required'\n    }\n    if (!values.password) {\n        errors.password = 'Required'\n    }\n    if (!values.author) {\n        errors.author = 'Required'\n    }\n    return errors;\n}\n\n"]},"metadata":{},"sourceType":"module"}