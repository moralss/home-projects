{"ast":null,"code":"import _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/Comments.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\nimport { reduxForm, Field } from \"redux-form\";\nimport history from '../history';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comments).call(this));\n\n    _this.handleSubmit = function (data) {\n      var blogId = _this.props.match.params.blogid;\n      var blogInfo = {\n        id: blogId,\n        text: data.text\n      };\n\n      _this.props.addComment(blogInfo);\n\n      _this.props.getAllComments(blogId);\n\n      history.push(\"/viewcomments/\".concat(blogId));\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.props.handleSubmit;\n      return React.createElement(\"div\", {\n        className: \"Commits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Profile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.handleSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Field, {\n        type: \"text\",\n        name: \"text\",\n        value: \"name\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    authorBlogs: state.profile.authorsBlogs\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addComment: function addComment(blogId) {\n      return dispatch(thunks.addComment(blogId));\n    },\n    getAllComments: function getAllComments(blogId) {\n      return dispatch(thunks.getAllComments(blogId));\n    }\n  };\n}\n\nvar CommentFormConfig = reduxForm({\n  form: \"addComment\"\n})(Comments);\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentFormConfig);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/Comments.js"],"names":["React","Component","connect","thunks","Profile","reduxForm","Field","history","Comments","handleSubmit","data","blogId","props","match","params","blogid","blogInfo","id","text","addComment","getAllComments","push","mapStateToProps","state","authorBlogs","profile","authorsBlogs","mapDispatchToProps","dispatch","CommentFormConfig","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;;IAEMC,Q;;;;;AACF,sBAAc;AAAA;;AAAA;;AACV;;AADU,UAKdC,YALc,GAKC,UAACC,IAAD,EAAU;AACrB,UAAMC,MAAM,GAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAvC;AACA,UAAMC,QAAQ,GAAG;AAAEC,QAAAA,EAAE,EAAEN,MAAN;AAAcO,QAAAA,IAAI,EAAER,IAAI,CAACQ;AAAzB,OAAjB;;AACA,YAAKN,KAAL,CAAWO,UAAX,CAAsBH,QAAtB;;AACA,YAAKJ,KAAL,CAAWQ,cAAX,CAA0BT,MAA1B;;AACAJ,MAAAA,OAAO,CAACc,IAAR,yBAA8BV,MAA9B;AACH,KAXa;;AAAA;AAEb;;;;6BAWQ;AAAA,UACGF,YADH,GACoB,KAAKG,KADzB,CACGH,YADH;AAIL,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAM,QAAA,QAAQ,EAAEA,YAAY,CAAC,KAAKA,YAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAC,MAArC;AAA4C,QAAA,SAAS,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,CADJ;AAWH;;;;EA7BkBR,S;;AAgCvB,SAASqB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,OAAN,CAAcC;AADxB,GAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHT,IAAAA,UAAU,EAAE,oBAACR,MAAD;AAAA,aAAYiB,QAAQ,CAACzB,MAAM,CAACgB,UAAP,CAAkBR,MAAlB,CAAD,CAApB;AAAA,KADT;AAEHS,IAAAA,cAAc,EAAE,wBAACT,MAAD;AAAA,aACZiB,QAAQ,CAACzB,MAAM,CAACiB,cAAP,CAAsBT,MAAtB,CAAD,CADI;AAAA;AAFb,GAAP;AAMH;;AAID,IAAMkB,iBAAiB,GAAGxB,SAAS,CAAC;AAChCyB,EAAAA,IAAI,EAAE;AAD0B,CAAD,CAAT,CAEvBtB,QAFuB,CAA1B;AAIA,eAAeN,OAAO,CAClBoB,eADkB,EAElBK,kBAFkB,CAAP,CAGbE,iBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\nimport { reduxForm, Field } from \"redux-form\";\nimport history from '../history';\n\nclass Comments extends Component {\n    constructor() {\n        super()\n    }\n\n\n    handleSubmit = (data) => {\n        const blogId = this.props.match.params.blogid;\n        const blogInfo = { id: blogId, text: data.text };\n        this.props.addComment(blogInfo);\n        this.props.getAllComments(blogId);\n        history.push(`/viewcomments/${blogId}`);\n    }\n\n    render() {\n        const { handleSubmit } = this.props;\n\n\n        return (\n            <div className=\"Commits\">\n                <Profile />\n                <form onSubmit={handleSubmit(this.handleSubmit)}>\n                    <Field type=\"text\" name=\"text\" value=\"name\" component=\"input\" />\n                    <input type=\"submit\" />\n\n                </form>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authorBlogs: state.profile.authorsBlogs,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addComment: (blogId) => dispatch(thunks.addComment(blogId)),\n        getAllComments: (blogId) =>\n            dispatch(thunks.getAllComments(blogId)),\n\n    };\n}\n\n\n\nconst CommentFormConfig = reduxForm({\n    form: \"addComment\"\n})(Comments);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CommentFormConfig);\n"]},"metadata":{},"sourceType":"module"}