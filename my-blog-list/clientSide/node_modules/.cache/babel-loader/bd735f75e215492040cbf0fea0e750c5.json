{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { signInAction } from '../action/thunk';\nimport axios from \"axios\";\n\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\n\nexport var asyncValidate =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(values, dispatch) {\n    var res, errorObject;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.post(\"\".concat(URL, \"/signin\"), values);\n\n          case 3:\n            res = _context.sent;\n            setTimeout(function () {\n              localStorage.setItem(\"user\", res.data.token);\n            }, 3000);\n            dispatch({\n              type: AUTHENTICATED\n            });\n            history.push(\"/addblog\");\n            _context.next = 14;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            errorObject = _context.t0.response.data.errors;\n            console.log(_context.t0.response.data.errors);\n            throw _objectSpread({}, errorObject);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 9]]);\n  }));\n\n  return function asyncValidate(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); // export const asyncValidate = (values , dispatch) => {\n//     return sleep(1000).then(() => { // simulate server latency\n//         if (['john', 'paul', 'george', 'ringo'].includes(values.email)) {\n//             throw { email: 'That username is taken' };\n//         }\n//     });\n// };\n\nexport var validate = function validate(values) {\n  var errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  }\n\n  if (!values.author) {\n    errors.author = 'Required';\n  }\n\n  return errors;\n};","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/valdate.js"],"names":["signInAction","axios","sleep","ms","Promise","resolve","setTimeout","asyncValidate","values","dispatch","post","URL","res","localStorage","setItem","data","token","type","AUTHENTICATED","history","push","errorObject","response","errors","console","log","validate","email","password","author"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAd;AAAA,GAAnB,CAAJ;AAAA,CAAhB;;AAGA,OAAO,IAAMI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,MAAP,EAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHR,KAAK,CAACS,IAAN,WAAcC,GAAd,cAA4BH,MAA5B,CAFG;;AAAA;AAEfI,YAAAA,GAFe;AAGrBN,YAAAA,UAAU,CAAC,YAAM;AACbO,cAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACG,IAAJ,CAASC,KAAtC;AACH,aAFS,EAEP,IAFO,CAAV;AAGAP,YAAAA,QAAQ,CAAC;AAAEQ,cAAAA,IAAI,EAAEC;AAAR,aAAD,CAAR;AACAC,YAAAA,OAAO,CAACC,IAAR,CAAa,UAAb;AAPqB;AAAA;;AAAA;AAAA;AAAA;AAUfC,YAAAA,WAVe,GAUD,YAAMC,QAAN,CAAeP,IAAf,CAAoBQ,MAVnB;AAWrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAMH,QAAN,CAAeP,IAAf,CAAoBQ,MAAhC;AAXqB,oCAaVF,WAbU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbd,aAAa;AAAA;AAAA;AAAA,GAAnB,C,CAkBP;AACA;AACA;AAEA;AACA;AACA;AACA;;AAKA,OAAO,IAAMmB,QAAQ,GAAG,SAAXA,QAAW,CAAAlB,MAAM,EAAI;AAC9B,MAAMe,MAAM,GAAG,EAAf;;AACA,MAAI,CAACf,MAAM,CAACmB,KAAZ,EAAmB;AACfJ,IAAAA,MAAM,CAACI,KAAP,GAAe,UAAf;AACH;;AACD,MAAI,CAACnB,MAAM,CAACoB,QAAZ,EAAsB;AAClBL,IAAAA,MAAM,CAACK,QAAP,GAAkB,UAAlB;AACH;;AACD,MAAI,CAACpB,MAAM,CAACqB,MAAZ,EAAoB;AAChBN,IAAAA,MAAM,CAACM,MAAP,GAAgB,UAAhB;AACH;;AACD,SAAON,MAAP;AACH,CAZM","sourcesContent":["import { signInAction } from '../action/thunk';\nimport axios from \"axios\";\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n\nexport const asyncValidate = async (values, dispatch) => {\n    try {\n        const res = await axios.post(`${URL}/signin`, values);\n        setTimeout(() => {\n            localStorage.setItem(\"user\", res.data.token);\n        }, 3000);\n        dispatch({ type: AUTHENTICATED });\n        history.push(\"/addblog\");\n\n    } catch (error) {\n        const errorObject = error.response.data.errors;\n        console.log(error.response.data.errors);\n\n        throw { ...errorObject };\n    }\n};\n\n\n// export const asyncValidate = (values , dispatch) => {\n//     return sleep(1000).then(() => { // simulate server latency\n//         if (['john', 'paul', 'george', 'ringo'].includes(values.email)) {\n\n//             throw { email: 'That username is taken' };\n//         }\n//     });\n// };\n\n\n\n\nexport const validate = values => {\n    const errors = {}\n    if (!values.email) {\n        errors.email = 'Required'\n    }\n    if (!values.password) {\n        errors.password = 'Required'\n    }\n    if (!values.author) {\n        errors.author = 'Required'\n    }\n    return errors;\n}\n\n"]},"metadata":{},"sourceType":"module"}