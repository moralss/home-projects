{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/authorBlogs.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\nimport ShowTotalLikes from './ShowTotalLikes';\nimport { userInfo } from \"os\";\n\nvar AuthorBlogs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthorBlogs, _Component);\n\n  function AuthorBlogs() {\n    var _this;\n\n    _classCallCheck(this, AuthorBlogs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthorBlogs).call(this));\n    _this.getInteraction =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.props.getIfLiked();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.getAuthorBlogs =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var authorId;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              authorId = _this.props.match.params.id;\n              _context2.next = 3;\n              return _this.props.getBlogsForAuthor(authorId);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.getTotalLikes =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(blogId) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(\"total\", blogId);\n\n                _this.props.getTotalLikes(blogId);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      status: false,\n      blogId: 0\n    };\n    return _this;\n  }\n\n  _createClass(AuthorBlogs, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getAuthorBlogs();\n      this.getInteraction();\n    }\n  }, {\n    key: \"showCommitBox\",\n    value: function showCommitBox(blogId) {\n      console.log(\"before\", blogId, this.state.status);\n      this.setState({\n        blogId: blogId,\n        status: true\n      });\n      console.log(\"after\", blogId, this.state.status);\n    }\n  }, {\n    key: \"addCommit\",\n    value: function addCommit() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \" Add Commit\"), React.createElement(\"textarea\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" \"));\n    }\n  }, {\n    key: \"increaseLike\",\n    value: function increaseLike(blogId) {\n      this.getInteraction();\n      this.props.addLike({\n        blogId: blogId\n      });\n    }\n  }, {\n    key: \"decreaseLike\",\n    value: function decreaseLike(blogId) {\n      this.props.dislikeBlog({\n        blogId: blogId\n      });\n    }\n  }, {\n    key: \"displayAuthor\",\n    value: function displayAuthor() {\n      var authorName = this.props.authorBlogs.map(function (blog) {\n        return blog.name;\n      })[0];\n      return authorName;\n    }\n  }, {\n    key: \"addLike\",\n    value: function addLike() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          like = _this$props.like,\n          likes = _this$props.likes; // {this.getTotalLikes(blog.id)}\n\n      return React.createElement(\"div\", {\n        className: \"AuthorBlogs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"author name \", this.displayAuthor(), React.createElement(Profile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), this.props.authorBlogs.map(function (blog) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"  text : \", blog.text, \" \"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \" updated time : \", blog.updated_at, \" \"), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \" likes : \", likes, \"  \"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.addLike(blog.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"  like \"), !blog.id == _this2.state.blogId && _this2.state.status ? _this2.addCommit() : null);\n      }));\n    }\n  }]);\n\n  return AuthorBlogs;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    authorBlogs: state.profile.authorsBlogs,\n    like: state.profile.like,\n    authorId: state.user.profile.id,\n    likes: state.profile.likes\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getBlogsForAuthor: function getBlogsForAuthor(authorId) {\n      return dispatch(thunks.getBlogsForAuthor(authorId));\n    },\n    dislikeBlog: function dislikeBlog(blogId) {\n      return dispatch(thunks.dislikeBlog(blogId));\n    },\n    addLike: function addLike(blogId) {\n      return dispatch(thunks.addLike(blogId));\n    },\n    getIfLiked: function getIfLiked() {\n      return dispatch(thunks.getIfLiked());\n    },\n    getTotalLikes: function getTotalLikes(blogId) {\n      return dispatch(thunks.getTotalLikes(blogId));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorBlogs);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/authorBlogs.js"],"names":["React","Component","connect","thunks","Profile","ShowTotalLikes","userInfo","AuthorBlogs","getInteraction","props","getIfLiked","getAuthorBlogs","authorId","match","params","id","getBlogsForAuthor","getTotalLikes","blogId","console","log","state","status","setState","addLike","dislikeBlog","authorName","authorBlogs","map","blog","name","like","likes","displayAuthor","text","updated_at","addCommit","mapStateToProps","profile","authorsBlogs","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\nimport ShowTotalLikes from './ShowTotalLikes';\nimport { userInfo } from \"os\";\n\n\n\nclass AuthorBlogs extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            status: false,\n            blogId: 0\n        }\n    }\n\n\n    componentWillMount() {\n        this.getAuthorBlogs();\n        this.getInteraction();\n    }\n\n\n    getInteraction = async () => {\n        await this.props.getIfLiked();\n    }\n\n\n    getAuthorBlogs = async () => {\n        const authorId = this.props.match.params.id;\n        await this.props.getBlogsForAuthor(authorId);\n    }\n\n\n    showCommitBox(blogId) {\n        console.log(\"before\", blogId, this.state.status);\n        this.setState({ blogId: blogId, status: true });\n        console.log(\"after\", blogId, this.state.status);\n    }\n\n\n    addCommit() {\n        return (\n            <div>\n                <label> Add Commit</label>\n                <textarea > </textarea>\n            </div>\n        )\n\n    }\n\n    increaseLike(blogId) {\n        this.getInteraction();\n        this.props.addLike({ blogId });\n    }\n\n\n    decreaseLike(blogId) {\n        this.props.dislikeBlog({ blogId });\n    }\n\n\n    displayAuthor() {\n        const authorName = this.props.authorBlogs.map(blog => {\n            return blog.name\n        })[0];\n\n        return authorName;\n    }\n\n    getTotalLikes = async (blogId) => {\n        console.log(\"total\", blogId);\n        this.props.getTotalLikes(blogId);\n    }\n\n    addLike() {\n\n    }\n\n\n    render() {\n        const { like, likes } = this.props;\n        // {this.getTotalLikes(blog.id)}\n        return (\n            <div className=\"AuthorBlogs\">\n                author name {this.displayAuthor()}\n                <Profile />\n\n                {this.props.authorBlogs.map(blog => {\n                    return (\n                        <div>\n                            <p>  text : {blog.text} </p>\n                            <span> updated time : {blog.updated_at} </span>\n                            <h3> likes : {likes}  </h3>\n                            <button onClick={() => this.addLike(blog.id)}>  like </button>\n                            {/* <button onClick={() => this.showCommitBox(blog.id)}>  Commit </button> */}\n                            {!blog.id == this.state.blogId && this.state.status ?\n                                this.addCommit() : null}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authorBlogs: state.profile.authorsBlogs,\n        like: state.profile.like,\n        authorId: state.user.profile.id,\n        likes: state.profile.likes\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getBlogsForAuthor: (authorId) => dispatch(thunks.getBlogsForAuthor(authorId)),\n        dislikeBlog: (blogId) => dispatch(thunks.dislikeBlog(blogId)),\n        addLike: (blogId) => dispatch(thunks.addLike(blogId)),\n        getIfLiked: () => dispatch(thunks.getIfLiked()),\n        getTotalLikes: (blogId) => dispatch(thunks.getTotalLikes(blogId)),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AuthorBlogs);\n"]},"metadata":{},"sourceType":"module"}