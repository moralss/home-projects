{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as actions from '../../actionTypes';\nimport axios from \"axios\";\nimport history from \"../../history\";\nvar URL = \"http://localhost:3001\";\nexport var registerUser = function registerUser(credentials) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post(\"\".concat(URL, \"/signin\"), credentials);\n\n              case 3:\n                res = _context.sent;\n                localStorage.setItem(\"user\", res.data.token);\n                history.push(\"/addblog\");\n                dispatch({\n                  type: actions.AUTHENTICATED,\n                  authenticated: true\n                });\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: actions.AUTHENTICATION_ERROR,\n                  payload: _context.t0.response.data\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport function loginInAction(credentials, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.post(\"\".concat(URL, \"/login\"), credentials);\n\n              case 3:\n                res = _context2.sent;\n                console.log(\"data\", res.data);\n                localStorage.setItem(\"user\", res.data.token);\n                history.push(\"/addblog\");\n                dispatch({\n                  type: actions.AUTHENTICATED,\n                  authenticated: true\n                }); // history.push(\"/addblog\");\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: actions.AUTHENTICATION_ERROR,\n                  payload: \"Invalid email or password\"\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/action/thunk/auth.js"],"names":["actions","axios","history","URL","registerUser","credentials","dispatch","post","res","localStorage","setItem","data","token","push","type","AUTHENTICATED","authenticated","AUTHENTICATION_ERROR","payload","response","loginInAction","console","log"],"mappings":";;AAAA,OAAO,KAAKA,OAAZ,MAAyB,mBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,IAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD,EAAiB;AAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEeL,KAAK,CAACM,IAAN,WAAcJ,GAAd,cAA4BE,WAA5B,CAFf;;AAAA;AAEGG,gBAAAA,GAFH;AAGHC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACG,IAAJ,CAASC,KAAtC;AACAV,gBAAAA,OAAO,CAACW,IAAR,CAAa,UAAb;AACAP,gBAAAA,QAAQ,CAAC;AAAEQ,kBAAAA,IAAI,EAAEd,OAAO,CAACe,aAAhB;AAA+BC,kBAAAA,aAAa,EAAE;AAA9C,iBAAD,CAAR;AALG;AAAA;;AAAA;AAAA;AAAA;AAQHV,gBAAAA,QAAQ,CAAC;AACPQ,kBAAAA,IAAI,EAAEd,OAAO,CAACiB,oBADP;AAEPC,kBAAAA,OAAO,EAAE,YAAMC,QAAN,CAAeR;AAFjB,iBAAD,CAAR;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAcD,CAfM;AAiBP,OAAO,SAASS,aAAT,CAAuBf,WAAvB,EAAoCH,OAApC,EAA6C;AAClD;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAMI,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEeL,KAAK,CAACM,IAAN,WAAcJ,GAAd,aAA2BE,WAA3B,CAFf;;AAAA;AAEGG,gBAAAA,GAFH;AAGHa,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBd,GAAG,CAACG,IAAxB;AACAF,gBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACG,IAAJ,CAASC,KAAtC;AACAV,gBAAAA,OAAO,CAACW,IAAR,CAAa,UAAb;AACAP,gBAAAA,QAAQ,CAAC;AAAEQ,kBAAAA,IAAI,EAAEd,OAAO,CAACe,aAAhB;AAA+BC,kBAAAA,aAAa,EAAE;AAA9C,iBAAD,CAAR,CANG,CAOH;;AAPG;AAAA;;AAAA;AAAA;AAAA;AASHV,gBAAAA,QAAQ,CAAC;AACPQ,kBAAAA,IAAI,EAAEd,OAAO,CAACiB,oBADP;AAEPC,kBAAAA,OAAO,EAAE;AAFF,iBAAD,CAAR;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAeD","sourcesContent":["import * as actions from '../../actionTypes';\nimport axios from \"axios\";\nimport history from \"../../history\";\n\nconst URL = \"http://localhost:3001\";\n\nexport const registerUser = (credentials) => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`${URL}/signin`, credentials);\n      localStorage.setItem(\"user\", res.data.token);\n      history.push(\"/addblog\");\n      dispatch({ type: actions.AUTHENTICATED, authenticated: true });\n\n    } catch (error) {\n      dispatch({\n        type: actions.AUTHENTICATION_ERROR,\n        payload: error.response.data\n      });\n    }\n  };\n};\n\nexport function loginInAction(credentials, history) {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`${URL}/login`, credentials);\n      console.log(\"data\", res.data);\n      localStorage.setItem(\"user\", res.data.token);\n      history.push(\"/addblog\");\n      dispatch({ type: actions.AUTHENTICATED, authenticated: true });\n      // history.push(\"/addblog\");\n    } catch (error) {\n      dispatch({\n        type: actions.AUTHENTICATION_ERROR,\n        payload: \"Invalid email or password\"\n      });\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}