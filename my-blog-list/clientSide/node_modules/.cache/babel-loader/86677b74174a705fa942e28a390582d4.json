{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport * as thunks from \"../action/thunk/auth\";\nimport { checkAuth } from \"../utils/checkAuth\";\nimport { Form } from \"../styles/styles\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.props.verifyUser(data);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      checkAuth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.props.handleSubmit;\n      var _this$props$errors = this.props.errors,\n          email = _this$props$errors.email,\n          password = _this$props$errors.password;\n      return React.createElement(FormWrapper, {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: handleSubmit(this.handleSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Field, {\n        type: \"text\",\n        label: \"email\",\n        name: \"email\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \" \", email), React.createElement(Field, {\n        type: \"password\",\n        label: \"password\",\n        name: \"password\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \" \", password), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    errors: state.errors.errors\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    verifyUser: function verifyUser(data) {\n      return dispatch(thunks.verifyUser(data));\n    }\n  };\n}\n\nvar loginConfig = reduxForm({\n  form: \"loginForm\"\n})(Login);\nexport default connect(mapStateToProps, mapDispatchToProps)(loginConfig);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/LoginForm.js"],"names":["React","Component","connect","reduxForm","Field","thunks","checkAuth","Form","Login","handleSubmit","data","props","verifyUser","errors","email","password","color","mapStateToProps","state","mapDispatchToProps","dispatch","loginConfig","form"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,K;;;;;;;;;;;;;;;;;;UAMJC,Y;;;;;+BAAe,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACP,MAAKC,KAAL,CAAWC,UAAX,CAAsBF,IAAtB,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;wCAJK;AAClBJ,MAAAA,SAAS;AACV;;;6BAMQ;AAAA,UACCG,YADD,GACkB,KAAKE,KADvB,CACCF,YADD;AAAA,+BAEkB,KAAKE,KAAL,CAAWE,MAF7B;AAAA,UAEFC,KAFE,sBAEFA,KAFE;AAAA,UAEMC,QAFN,sBAEMA,QAFN;AAIP,aACE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEN,YAAY,CAAC,KAAKA,YAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,OAAzB;AAAiC,QAAA,IAAI,EAAC,OAAtC;AAA8C,QAAA,SAAS,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,KAAK,EAAE;AAAEO,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiCF,KAAjC,CAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAC,UAA7B;AAAwC,QAAA,IAAI,EAAC,UAA7C;AAAwD,QAAA,SAAS,EAAC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiCD,QAAjC,CAJF,EAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CADF;AAWD;;;;EAzBiBd,S;;AA6BpB,SAASgB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEL,IAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaA;AAAvB,GAAP;AACD;;AAGD,SAASM,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLR,IAAAA,UAAU,EAAE,oBAACF,IAAD;AAAA,aACVU,QAAQ,CAACf,MAAM,CAACO,UAAP,CAAkBF,IAAlB,CAAD,CADE;AAAA;AADP,GAAP;AAID;;AAGD,IAAIW,WAAW,GAAGlB,SAAS,CAAC;AAC1BmB,EAAAA,IAAI,EAAE;AADoB,CAAD,CAAT,CAEfd,KAFe,CAAlB;AAIA,eAAeN,OAAO,CACpBe,eADoB,EAEpBE,kBAFoB,CAAP,CAGbE,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport * as thunks from \"../action/thunk/auth\";\nimport { checkAuth } from \"../utils/checkAuth\";\nimport { Form } from \"../styles/styles\";\n\nclass Login extends Component {\n\n  componentDidMount() {\n    checkAuth()\n  }\n\n  handleSubmit = async data => {\n    await this.props.verifyUser(data);\n  };\n\n  render() {\n    const { handleSubmit } = this.props;\n    let {email , password} = this.props.errors;\n\n    return (\n      <FormWrapper className=\"Form\">\n        <Form onSubmit={handleSubmit(this.handleSubmit)}>\n          <Field type=\"text\" label=\"email\" name=\"email\" component=\"input\" />\n          <span style={{ color: \"red\" }}> {email}</span>\n          <Field type=\"password\" label=\"password\" name=\"password\" component=\"input\" />\n          <span style={{ color: \"red\" }}> {password}</span>\n          <input type=\"submit\" />\n        </Form>\n      </FormWrapper>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return { errors: state.errors.errors }\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    verifyUser: (data) =>\n      dispatch(thunks.verifyUser(data))\n  };\n}\n\n\nlet loginConfig = reduxForm({\n  form: \"loginForm\"\n})(Login);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(loginConfig);\n"]},"metadata":{},"sourceType":"module"}