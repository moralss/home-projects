{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/EditBlog.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport { reduxForm, Field } from \"redux-form\";\nimport TextArea from '../components/TextArea';\n\nvar EditBlog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBlog, _Component);\n\n  function EditBlog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditBlog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditBlog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (data) {\n      var blogId = _this.props.id;\n      var blogInfo = {\n        id: blogId,\n        text: data.text\n      };\n\n      _this.props.updateBlog(blogInfo);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditBlog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadClient(); // dispatch an action from your component\n    }\n  }, {\n    key: \"loadClient\",\n    value: function () {\n      var _loadClient = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var blogId, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // API call here\n                blogId = this.props.match.params.id;\n                _context.next = 3;\n                return this.props.getEditBlog(Number(blogId));\n\n              case 3:\n                res = _context.sent;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function loadClient() {\n        return _loadClient.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.props.handleSubmit;\n      return React.createElement(\"div\", {\n        className: \"LatestBlog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" edit Form \"), React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.handleSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(FormSide, {\n        onSubmit: handleSubmit(this.handleSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" enter blog \"), React.createElement(Field, {\n        type: \"text\",\n        name: \"text\",\n        component: TextArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" Submit \"))));\n    }\n  }]);\n\n  return EditBlog;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    id: state.user.editBlog.id,\n    initialValues: {\n      text: state.user.editBlog.text\n    }\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateBlog: function updateBlog(blogInfo) {\n      return dispatch(thunks.updateBlog(blogInfo));\n    },\n    getEditBlog: function getEditBlog(blogId) {\n      return dispatch(thunks.getEditBlog(blogId));\n    }\n  };\n}\n\nvar EditFormConfig = reduxForm({\n  form: \"registerUser\",\n  enableReinitialize: true\n})(EditBlog);\nexport default connect(mapStateToProps, mapDispatchToProps)(EditFormConfig);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/EditBlog.js"],"names":["React","Component","connect","thunks","reduxForm","Field","TextArea","EditBlog","handleSubmit","data","blogId","props","id","blogInfo","text","updateBlog","loadClient","match","params","getEditBlog","Number","res","mapStateToProps","state","user","editBlog","initialValues","mapDispatchToProps","dispatch","EditFormConfig","form","enableReinitialize"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;IAGMC,Q;;;;;;;;;;;;;;;;;;UAGJC,Y,GAAe,UAACC,IAAD,EAAU;AACvB,UAAMC,MAAM,GAAG,MAAKC,KAAL,CAAWC,EAA1B;AACA,UAAMC,QAAQ,GAAG;AAAED,QAAAA,EAAE,EAAEF,MAAN;AAAcI,QAAAA,IAAI,EAAEL,IAAI,CAACK;AAAzB,OAAjB;;AACA,YAAKH,KAAL,CAAWI,UAAX,CAAsBF,QAAtB;AACD,K;;;;;;;wCAImB;AAClB,WAAKG,UAAL,GADkB,CACC;AACpB;;;;;;;;;;;;AAGC;AACMN,gBAAAA,M,GAAS,KAAKC,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBN,E;;uBACvB,KAAKD,KAAL,CAAWQ,WAAX,CAAuBC,MAAM,CAACV,MAAD,CAA7B,C;;;AAAZW,gBAAAA,G;;;;;;;;;;;;;;;;6BAGG;AAAA,UACCb,YADD,GACkB,KAAKG,KADvB,CACCH,YADD;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAM,QAAA,QAAQ,EAAEA,YAAY,CAAC,KAAKA,YAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,YAAY,CAAC,KAAKA,YAAN,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,SAAS,EAAEF,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,CAFF,CADF;AAYD;;;;EApCoBL,S;;AAuCvB,SAASqB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLX,IAAAA,EAAE,EAAEW,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBb,EADnB;AAELc,IAAAA,aAAa,EAAE;AACbZ,MAAAA,IAAI,EAAES,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBX;AADb;AAFV,GAAP;AAMD;;AAED,SAASa,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLb,IAAAA,UAAU,EAAE,oBAACF,QAAD;AAAA,aAAce,QAAQ,CAACzB,MAAM,CAACY,UAAP,CAAkBF,QAAlB,CAAD,CAAtB;AAAA,KADP;AAELM,IAAAA,WAAW,EAAE,qBAAAT,MAAM;AAAA,aAAIkB,QAAQ,CAACzB,MAAM,CAACgB,WAAP,CAAmBT,MAAnB,CAAD,CAAZ;AAAA;AAFd,GAAP;AAID;;AAED,IAAMmB,cAAc,GAAGzB,SAAS,CAAC;AAC/B0B,EAAAA,IAAI,EAAE,cADyB;AAE/BC,EAAAA,kBAAkB,EAAE;AAFW,CAAD,CAAT,CAGpBxB,QAHoB,CAAvB;AAKA,eAAeL,OAAO,CACpBoB,eADoB,EAEpBK,kBAFoB,CAAP,CAGbE,cAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport { reduxForm, Field } from \"redux-form\";\nimport TextArea from '../components/TextArea';\n\n\nclass EditBlog extends Component {\n\n\n  handleSubmit = (data) => {\n    const blogId = this.props.id;\n    const blogInfo = { id: blogId, text: data.text };\n    this.props.updateBlog(blogInfo);\n  }\n\n\n\n  componentDidMount() {\n    this.loadClient(); // dispatch an action from your component\n  }\n\n  async loadClient() {\n    // API call here\n    const blogId = this.props.match.params.id;\n    let res = await this.props.getEditBlog(Number(blogId));\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n\n    return (\n      <div className=\"LatestBlog\">\n        <h1> edit Form </h1>\n        <form onSubmit={handleSubmit(this.handleSubmit)}>\n          <FormSide onSubmit={handleSubmit(this.handleSubmit)}>\n            <label> enter blog </label>\n            <Field type=\"text\" name=\"text\" component={TextArea} />\n            <button> Submit </button>\n          </FormSide>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    id: state.user.editBlog.id,\n    initialValues: {\n      text: state.user.editBlog.text\n    }\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateBlog: (blogInfo) => dispatch(thunks.updateBlog(blogInfo)),\n    getEditBlog: blogId => dispatch(thunks.getEditBlog(blogId))\n  };\n}\n\nconst EditFormConfig = reduxForm({\n  form: \"registerUser\",\n  enableReinitialize: true\n})(EditBlog);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditFormConfig);\n"]},"metadata":{},"sourceType":"module"}