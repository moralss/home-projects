{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/Comments.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\nimport { reduxForm, Field } from \"redux-form\";\n\nvar Commits =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Commits, _Component);\n\n  function Commits() {\n    var _this;\n\n    _classCallCheck(this, Commits);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Commits).call(this));\n    _this.addComment =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var blogId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              blogId = _this.props.match.params.blogid;\n              _context.next = 3;\n              return _this.props.addComment({\n                blogId: blogId\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(Commits, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          like = _this$props.like,\n          likes = _this$props.likes;\n      return React.createElement(\"div\", {\n        className: \"Commits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Profile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.handleSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" enter blog \"), React.createElement(Field, {\n        type: \"text\",\n        name: \"text\",\n        value: \"name\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Commits;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    authorBlogs: state.profile.authorsBlogs\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addComment: function addComment(blogId) {\n      return dispatch(thunks.addComment(blogId));\n    }\n  };\n}\n\nvar CommentFormConfig = reduxForm({\n  form: \"addComment\"\n})(Comments);\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentFormConfig);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/Comments.js"],"names":["React","Component","connect","thunks","Profile","reduxForm","Field","Commits","addComment","blogId","props","match","params","blogid","like","likes","handleSubmit","mapStateToProps","state","authorBlogs","profile","authorsBlogs","mapDispatchToProps","dispatch","CommentFormConfig","form","Comments"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;;IAGMC,O;;;;;AACF,qBAAc;AAAA;;AAAA;;AACV;AADU,UAMdC,UANc;AAAA;AAAA;AAAA;AAAA,6BAMD;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,cAAAA,MADG,GACM,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAD9B;AAAA;AAAA,qBAEH,MAAKH,KAAL,CAAWF,UAAX,CAAsB;AAAEC,gBAAAA,MAAM,EAANA;AAAF,eAAtB,CAFG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANC;AAAA;AAGb;;;;6BAUQ;AAAA,wBACmB,KAAKC,KADxB;AAAA,UACGI,IADH,eACGA,IADH;AAAA,UACSC,KADT,eACSA,KADT;AAIL,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAM,QAAA,QAAQ,EAAEC,YAAY,CAAC,KAAKA,YAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAC,MAArC;AAA4C,QAAA,SAAS,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,CADJ;AAYH;;;;EA9BiBf,S;;AAiCtB,SAASgB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,OAAN,CAAcC;AADxB,GAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHf,IAAAA,UAAU,EAAE,oBAACC,MAAD;AAAA,aAAYc,QAAQ,CAACpB,MAAM,CAACK,UAAP,CAAkBC,MAAlB,CAAD,CAApB;AAAA;AADT,GAAP;AAGH;;AAID,IAAMe,iBAAiB,GAAGnB,SAAS,CAAC;AAChCoB,EAAAA,IAAI,EAAE;AAD0B,CAAD,CAAT,CAEvBC,QAFuB,CAA1B;AAIA,eAAexB,OAAO,CAClBe,eADkB,EAElBK,kBAFkB,CAAP,CAGbE,iBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\nimport { reduxForm, Field } from \"redux-form\";\n\n\nclass Commits extends Component {\n    constructor() {\n        super()\n\n    }\n\n\n    addComment = async () => {\n        const blogId = this.props.match.params.blogid;\n        await this.props.addComment({ blogId, });\n\n    }\n\n\n    render() {\n        const { like, likes } = this.props;\n\n\n        return (\n            <div className=\"Commits\">\n                <Profile />\n                <form onSubmit={handleSubmit(this.handleSubmit)}>\n                    <label> enter blog </label>\n                    <Field type=\"text\" name=\"text\" value=\"name\" component=\"input\" />\n                    <input type=\"submit\" />\n\n                </form>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authorBlogs: state.profile.authorsBlogs,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addComment: (blogId) => dispatch(thunks.addComment(blogId))\n    };\n}\n\n\n\nconst CommentFormConfig = reduxForm({\n    form: \"addComment\"\n})(Comments);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CommentFormConfig);\n"]},"metadata":{},"sourceType":"module"}