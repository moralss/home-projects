{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/authorBlogs.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\n\nvar AuthorBlogs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthorBlogs, _Component);\n\n  function AuthorBlogs() {\n    var _this;\n\n    _classCallCheck(this, AuthorBlogs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthorBlogs).call(this));\n    _this.getAuthorBlogs =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var authorId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              authorId = _this.props.match.params.id;\n              _context.next = 3;\n              return _this.props.getIfLiked(authorId);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.getAuthorBlogs =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var authorId;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              authorId = _this.props.match.params.id;\n              _context2.next = 3;\n              return _this.props.getBlogsForAuthor(authorId);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.state = {\n      status: false,\n      blogId: 0\n    };\n    return _this;\n  }\n\n  _createClass(AuthorBlogs, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getAuthorBlogs();\n    }\n  }, {\n    key: \"showCommitBox\",\n    value: function showCommitBox(blogId) {\n      console.log(\"before\", blogId, this.state.status);\n      this.setState({\n        blogId: blogId,\n        status: true\n      });\n      console.log(\"after\", blogId, this.state.status);\n    }\n  }, {\n    key: \"addCommit\",\n    value: function addCommit() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" Add Commit\"), React.createElement(\"textarea\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" \"));\n    }\n  }, {\n    key: \"increaseLike\",\n    value: function increaseLike(blogId) {\n      this.props.addLike({\n        blogId: blogId\n      });\n    }\n  }, {\n    key: \"displayAuthor\",\n    value: function displayAuthor() {\n      var authorName = this.props.authorBlogs.map(function (blog) {\n        return blog.name;\n      })[0];\n      return authorName;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"AuthorBlogs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"author name \", this.displayAuthor(), this.props.authorBlogs.map(function (blog) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"  text : \", blog.text, \" \"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \" updated time : \", blog.updated_at, \" \"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.increaseLike(blog.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"  Like \"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.showCommitBox(blog.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"  Commit \"), !blog.id == _this2.state.blogId && _this2.state.status ? _this2.addCommit() : null);\n      }));\n    }\n  }]);\n\n  return AuthorBlogs;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    authorBlogs: state.authorAllBlogs.authorsBlogs\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getBlogsForAuthor: function getBlogsForAuthor(authorId) {\n      return dispatch(thunks.getBlogsForAuthor(authorId));\n    },\n    addLike: function addLike(blogId) {\n      return dispatch(thunks.addLike(blogId));\n    },\n    getIfLiked: function getIfLiked(authorId) {\n      return dispatch(thunks.getIfLiked(authorId));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorBlogs);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/authorBlogs.js"],"names":["React","Component","connect","thunks","Profile","AuthorBlogs","getAuthorBlogs","authorId","props","match","params","id","getIfLiked","getBlogsForAuthor","state","status","blogId","console","log","setState","addLike","authorName","authorBlogs","map","blog","name","displayAuthor","text","updated_at","increaseLike","showCommitBox","addCommit","mapStateToProps","authorAllBlogs","authorsBlogs","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport Profile from \"./Profile\";\n\nclass AuthorBlogs extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            status: false,\n            blogId: 0\n\n        }\n    }\n\n\n    componentWillMount() {\n        this.getAuthorBlogs();\n\n    }\n\n\n    getAuthorBlogs = async () => {\n        const authorId = this.props.match.params.id;\n        await this.props.getIfLiked(authorId);\n    }\n\n\n    getAuthorBlogs = async () => {\n        const authorId = this.props.match.params.id;\n        await this.props.getBlogsForAuthor(authorId);\n    }\n\n\n    showCommitBox(blogId) {\n        console.log(\"before\", blogId, this.state.status);\n        this.setState({ blogId: blogId, status: true });\n        console.log(\"after\", blogId, this.state.status);\n    }\n\n\n    addCommit() {\n        return (\n            <div>\n                <label> Add Commit</label>\n                <textarea > </textarea>\n            </div>\n        )\n\n    }\n\n    increaseLike(blogId) {\n        this.props.addLike({ blogId });\n    }\n\n    displayAuthor() {\n        const authorName = this.props.authorBlogs.map(blog => {\n            return blog.name\n        })[0];\n\n        return authorName;\n    }\n\n\n    render() {\n        return (\n            <div className=\"AuthorBlogs\">\n                author name {this.displayAuthor()}\n\n                {this.props.authorBlogs.map(blog => {\n                    return (\n                        <div>\n                            <p>  text : {blog.text} </p>\n                            <span> updated time : {blog.updated_at} </span>\n                            <button onClick={() => this.increaseLike(blog.id)}>  Like </button>\n                            <button onClick={() => this.showCommitBox(blog.id)}>  Commit </button>\n\n                            {!blog.id == this.state.blogId && this.state.status ?\n                                this.addCommit() : null}\n\n                            {/* {this.state.status ? this.addCommit() : null} */}\n\n                        </div>\n                    );\n                })}\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authorBlogs: state.authorAllBlogs.authorsBlogs\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getBlogsForAuthor: (authorId) => dispatch(thunks.getBlogsForAuthor(authorId)),\n        addLike: (blogId) => dispatch(thunks.addLike(blogId)),\n        getIfLiked: (authorId) => dispatch(thunks.getIfLiked(authorId)),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AuthorBlogs);\n"]},"metadata":{},"sourceType":"module"}