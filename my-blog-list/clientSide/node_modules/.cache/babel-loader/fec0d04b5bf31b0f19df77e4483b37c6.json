{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/EditBlog.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport { reduxForm, Field } from \"redux-form\";\nimport store from \"../config/store\";\n\nvar EditBlog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBlog, _Component);\n\n  function EditBlog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditBlog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditBlog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (data) {\n      var blogId = _this.props.id;\n      console.log(blogId);\n      var blogInfo = {\n        id: blogId,\n        text: data.text\n      };\n      console.log(\"blogInfo\", blogInfo);\n\n      _this.props.updateBlog(blogInfo, _this.props.history);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditBlog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadClient(); // dispatch an action from your component\n    }\n  }, {\n    key: \"loadClient\",\n    value: function () {\n      var _loadClient = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var blogId, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // API call here\n                blogId = this.props.match.params.id;\n                _context.next = 3;\n                return this.props.getEditBlog(Number(blogId));\n\n              case 3:\n                res = _context.sent;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function loadClient() {\n        return _loadClient.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          text = _this$props.text;\n      return React.createElement(\"div\", {\n        className: \"LatestBlog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" edit Form \"), React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.handleSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" enter blog \"), React.createElement(Field, {\n        type: \"text\",\n        name: \"text\",\n        value: \"name\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditBlog;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    id: state.user.editBlog.id,\n    initialValues: {\n      text: state.user.editBlog.text\n    }\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateBlog: function updateBlog(blogInfo) {\n      return dispatch(thunks.updateBlog(blogInfo));\n    },\n    getEditBlog: function getEditBlog(blogId) {\n      return dispatch(thunks.getEditBlog(blogId));\n    }\n  };\n}\n\nvar EditFormConfig = reduxForm({\n  form: \"registerUser\",\n  enableReinitialize: true\n})(EditBlog);\nexport default connect(mapStateToProps, mapDispatchToProps)(EditFormConfig);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/EditBlog.js"],"names":["React","Component","connect","thunks","reduxForm","Field","store","EditBlog","handleSubmit","data","blogId","props","id","console","log","blogInfo","text","updateBlog","history","loadClient","match","params","getEditBlog","Number","res","mapStateToProps","state","user","editBlog","initialValues","mapDispatchToProps","dispatch","EditFormConfig","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport { reduxForm, Field } from \"redux-form\";\nimport store from \"../config/store\";\n\nclass EditBlog extends Component {\n\n\n  handleSubmit = (data)=> {\n    const blogId = this.props.id;\n    console.log(blogId);\n    const blogInfo = { id: blogId, text: data.text };   \n    console.log(\"blogInfo\" , blogInfo);\n    this.props.updateBlog(blogInfo , this.props.history);\n  }\n\n\n\n  componentDidMount() {\n    this.loadClient(); // dispatch an action from your component\n  }\n\n  async loadClient() {\n    // API call here\n    const blogId = this.props.match.params.id;\n    let res = await this.props.getEditBlog(Number(blogId));\n  }\n\n  render() {\n    const { handleSubmit, text } = this.props;\n\n    return (\n      <div className=\"LatestBlog\">\n        <h1> edit Form </h1>\n        <form onSubmit={handleSubmit(this.handleSubmit)}>\n          <label> enter blog </label>\n          <Field type=\"text\" name=\"text\" value=\"name\" component=\"input\" />\n          <input type=\"submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    id: state.user.editBlog.id,\n    initialValues: {\n      text: state.user.editBlog.text\n    }\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateBlog: (blogInfo) => dispatch(thunks.updateBlog(blogInfo)),\n    getEditBlog: blogId => dispatch(thunks.getEditBlog(blogId))\n  };\n}\n\nconst EditFormConfig = reduxForm({\n  form: \"registerUser\",\n  enableReinitialize: true\n})(EditBlog);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditFormConfig);\n"]},"metadata":{},"sourceType":"module"}