{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/ViewComments.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport { ViewCommentsContainer, ViewCommentsWrapper, SmallHeader } from \"../styles/styles\";\n\nvar ViewComments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewComments, _Component);\n\n  function ViewComments() {\n    var _this;\n\n    _classCallCheck(this, ViewComments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewComments).call(this));\n    _this.getComments =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var blogId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.props.getAllComments(blogId);\n\n            case 2:\n              blogId = _this.props.match.params.blogid;\n              _context.next = 5;\n              return _this.props.getAuthorBlog(blogId);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(ViewComments, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getComments();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.singlblog);\n      return React.createElement(ViewCommentsContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" \", this.props.singlblog.text, \"  \"), this.props.allComments.map(function (comment) {\n        return React.createElement(ViewCommentsWrapper, {\n          style: {\n            padding: \"2.5rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(SmallHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"   \", comment.name, \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"   \", comment.comment, \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"   \", comment.created_at, \" \"));\n      }));\n    }\n  }]);\n\n  return ViewComments;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    allComments: state.comments.allCommentsForblog,\n    singlblog: state.blog.authorSingleBlog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addComment: function addComment(blogId) {\n      return dispatch(thunks.addComment(blogId));\n    },\n    getAllComments: function getAllComments(blogId) {\n      return dispatch(thunks.getAllComments(blogId));\n    },\n    getAuthorBlog: function getAuthorBlog(blogId) {\n      return dispatch(thunks.getAuthorBlog(blogId));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewComments);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/ViewComments.js"],"names":["React","Component","connect","thunks","ViewCommentsContainer","ViewCommentsWrapper","SmallHeader","ViewComments","getComments","props","getAllComments","blogId","match","params","blogid","getAuthorBlog","console","log","singlblog","text","allComments","map","comment","padding","name","created_at","mapStateToProps","state","comments","allCommentsForblog","blog","authorSingleBlog","mapDispatchToProps","dispatch","addComment"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,SAASC,qBAAT,EAAiCC,mBAAjC,EAAuDC,WAAvD,QAAyE,kBAAzE;;IAIMC,Y;;;;;AACF,0BAAc;AAAA;;AAAA;;AACV;AADU,UAWdC,WAXc;AAAA;AAAA;AAAA;AAAA,6BAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACJ,MAAKC,KAAL,CAAWC,cAAX,CAA0BC,MAA1B,CADI;;AAAA;AAEJA,cAAAA,MAFI,GAEK,MAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,MAF7B;AAAA;AAAA,qBAGJ,MAAKL,KAAL,CAAWM,aAAX,CAAyBJ,MAAzB,CAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXA;AAAA;AAEb;;;;yCAGoB;AACjB,WAAKH,WAAL;AACH;;;6BAYQ;AACLQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWS,SAAvB;AAGA,aACI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK,KAAKT,KAAL,CAAWS,SAAX,CAAqBC,IAA1B,OADJ,EAEK,KAAKV,KAAL,CAAWW,WAAX,CAAuBC,GAAvB,CAA2B,UAAAC,OAAO,EAAI;AACnC,eACI,oBAAC,mBAAD;AAAqB,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAC;AAAT,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiBD,OAAO,CAACE,IAAzB,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAOF,OAAO,CAACA,OAAf,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAOA,OAAO,CAACG,UAAf,MAHJ,CADJ;AAOH,OARA,CAFL,CADJ;AAcH;;;;EAtCsBxB,S;;AAyC3B,SAASyB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHP,IAAAA,WAAW,EAAEO,KAAK,CAACC,QAAN,CAAeC,kBADzB;AAEHX,IAAAA,SAAS,EAAES,KAAK,CAACG,IAAN,CAAWC;AAFnB,GAAP;AAIH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHC,IAAAA,UAAU,EAAE,oBAACvB,MAAD;AAAA,aAAYsB,QAAQ,CAAC9B,MAAM,CAAC+B,UAAP,CAAkBvB,MAAlB,CAAD,CAApB;AAAA,KADT;AAEDD,IAAAA,cAAc,EAAE,wBAACC,MAAD;AAAA,aACdsB,QAAQ,CAAC9B,MAAM,CAACO,cAAP,CAAsBC,MAAtB,CAAD,CADM;AAAA,KAFf;AAIHI,IAAAA,aAAa,EAAE,uBAACJ,MAAD;AAAA,aACXsB,QAAQ,CAAC9B,MAAM,CAACY,aAAP,CAAqBJ,MAArB,CAAD,CADG;AAAA;AAJZ,GAAP;AAOH;;AAGD,eAAeT,OAAO,CAClBwB,eADkB,EAElBM,kBAFkB,CAAP,CAGbzB,YAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport { ViewCommentsContainer , ViewCommentsWrapper , SmallHeader} from \"../styles/styles\";\n\n\n\nclass ViewComments extends Component {\n    constructor() {\n        super()\n    }\n\n\n    componentWillMount() {\n        this.getComments();\n    }\n\n\n\n    getComments = async () => {\n        await this.props.getAllComments(blogId);\n        const blogId = this.props.match.params.blogid;\n        await this.props.getAuthorBlog(blogId);\n    }\n\n\n\n    render() {\n        console.log(this.props.singlblog);\n\n\n        return (\n            <ViewCommentsContainer>\n                <p> {this.props.singlblog.text}  </p>\n                {this.props.allComments.map(comment => {\n                    return (\n                        <ViewCommentsWrapper style={{padding:\"2.5rem\"}}>\n                            <SmallHeader>   {comment.name} </SmallHeader>\n                            <p>   {comment.comment} </p>\n                            <p>   {comment.created_at} </p>\n                        </ViewCommentsWrapper>\n                    );\n                })}\n            </ViewCommentsContainer>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        allComments: state.comments.allCommentsForblog,\n        singlblog: state.blog.authorSingleBlog\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addComment: (blogId) => dispatch(thunks.addComment(blogId))\n        , getAllComments: (blogId) =>\n            dispatch(thunks.getAllComments(blogId)),\n        getAuthorBlog: (blogId) =>\n            dispatch(thunks.getAuthorBlog(blogId))\n    };\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewComments);\n"]},"metadata":{},"sourceType":"module"}