{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as actions from '../../actionTypes';\nexport var signInAction = function signInAction(credentials, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post(\"\".concat(URL, \"/signin\"), credentials);\n\n              case 3:\n                res = _context.sent;\n                setTimeout(function () {\n                  localStorage.setItem(\"user\", res.data.token);\n                }, 3000);\n                dispatch({\n                  type: actions.AUTHENTICATED\n                });\n                history.push(\"/addblog\");\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: actions.AUTHENTICATION_ERROR,\n                  payload: _context.t0.response.data\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport function loginInAction(credentials, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.post(\"\".concat(URL, \"/login\"), credentials);\n\n              case 3:\n                res = _context2.sent;\n                localStorage.setItem(\"user\", res.data.token);\n                dispatch({\n                  type: actions.AUTHENTICATED\n                });\n                history.push(\"/addblog\");\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: actions.AUTHENTICATION_ERROR,\n                  payload: \"Invalid email or password\"\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/action/thunk/auth.js"],"names":["actions","signInAction","credentials","history","dispatch","axios","post","URL","res","setTimeout","localStorage","setItem","data","token","type","AUTHENTICATED","push","AUTHENTICATION_ERROR","payload","response","loginInAction"],"mappings":";;AAAA,OAAO,KAAKA,OAAZ,MAAyB,mBAAzB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD,EAAcC,OAAd,EAA0B;AAClD;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEeC,KAAK,CAACC,IAAN,WAAcC,GAAd,cAA4BL,WAA5B,CAFf;;AAAA;AAEGM,gBAAAA,GAFH;AAGHC,gBAAAA,UAAU,CAAC,YAAM;AACfC,kBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BH,GAAG,CAACI,IAAJ,CAASC,KAAtC;AACD,iBAFS,EAEP,IAFO,CAAV;AAGAT,gBAAAA,QAAQ,CAAC;AAAEU,kBAAAA,IAAI,EAAEd,OAAO,CAACe;AAAhB,iBAAD,CAAR;AACAZ,gBAAAA,OAAO,CAACa,IAAR,CAAa,UAAb;AAPG;AAAA;;AAAA;AAAA;AAAA;AAUHZ,gBAAAA,QAAQ,CAAC;AACPU,kBAAAA,IAAI,EAAEd,OAAO,CAACiB,oBADP;AAEPC,kBAAAA,OAAO,EAAE,YAAMC,QAAN,CAAeP;AAFjB,iBAAD,CAAR;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBD,CAjBI;AAmBL,OAAO,SAASQ,aAAT,CAAuBlB,WAAvB,EAAoCC,OAApC,EAA6C;AAClD;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEeC,KAAK,CAACC,IAAN,WAAcC,GAAd,aAA2BL,WAA3B,CAFf;;AAAA;AAEGM,gBAAAA,GAFH;AAGHE,gBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BH,GAAG,CAACI,IAAJ,CAASC,KAAtC;AACAT,gBAAAA,QAAQ,CAAC;AAAEU,kBAAAA,IAAI,EAAEd,OAAO,CAACe;AAAhB,iBAAD,CAAR;AACAZ,gBAAAA,OAAO,CAACa,IAAR,CAAa,UAAb;AALG;AAAA;;AAAA;AAAA;AAAA;AAOHZ,gBAAAA,QAAQ,CAAC;AACPU,kBAAAA,IAAI,EAAEd,OAAO,CAACiB,oBADP;AAEPC,kBAAAA,OAAO,EAAE;AAFF,iBAAD,CAAR;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAaD","sourcesContent":["import * as actions from '../../actionTypes';\n\nexport const signInAction = (credentials, history) => {\n    return async dispatch => {\n      try {\n        const res = await axios.post(`${URL}/signin`, credentials);\n        setTimeout(() => {\n          localStorage.setItem(\"user\", res.data.token);\n        }, 3000);\n        dispatch({ type: actions.AUTHENTICATED });\n        history.push(\"/addblog\");\n  \n      } catch (error) {\n        dispatch({\n          type: actions.AUTHENTICATION_ERROR,\n          payload: error.response.data\n        });\n      }\n    };\n  };\n  \n  export function loginInAction(credentials, history) {\n    return async dispatch => {\n      try {\n        const res = await axios.post(`${URL}/login`, credentials);\n        localStorage.setItem(\"user\", res.data.token);\n        dispatch({ type: actions.AUTHENTICATED });\n        history.push(\"/addblog\");\n      } catch (error) {\n        dispatch({\n          type: actions.AUTHENTICATION_ERROR,\n          payload: \"Invalid email or password\"\n        });\n      }\n    };\n  }\n  "]},"metadata":{},"sourceType":"module"}