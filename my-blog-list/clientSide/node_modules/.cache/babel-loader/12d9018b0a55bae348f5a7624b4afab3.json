{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/FormRegister.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk/auth\";\nimport renderField from \"../components/Input\";\nimport { callCheck } from \"../routes/routes\";\nimport { checkAuth } from \"../utils/checkAuth\";\nimport { FORM, FormWrapper, HeaderLarge } from \"../styles/styles\";\n\nvar FormRegister =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormRegister, _Component);\n\n  function FormRegister() {\n    var _this;\n\n    _classCallCheck(this, FormRegister);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormRegister).call(this));\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.props.registerUser(data);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(FormRegister, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      callCheck();\n      checkAuth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          submitting = _this$props.submitting;\n      var _this$props$errors = this.props.errors,\n          email = _this$props$errors.email,\n          author = _this$props$errors.author,\n          password = _this$props$errors.password;\n      return React.createElement(FormWrapper, {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(HeaderLarge, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" Register Form \"), React.createElement(FORM, {\n        onSubmit: handleSubmit(this.handleSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Field, {\n        type: \"text\",\n        label: \"Email\",\n        name: \"email\",\n        component: renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \" \", email, \" \"), React.createElement(Field, {\n        type: \"password\",\n        label: \"Password\",\n        name: \"password\",\n        component: renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \" \", password), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \" \", password), React.createElement(Field, {\n        type: \"author\",\n        label: \"Author\",\n        name: \"author\",\n        component: renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" \", author), React.createElement(\"input\", {\n        type: \"submit\",\n        disabled: submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FormRegister;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registerUser: function registerUser(data) {\n      return dispatch(thunks.registerUser(data));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errors: state.errors.errors\n  };\n}\n\nvar registerUser = reduxForm({\n  form: \"registerUser\"\n})(FormRegister);\nexport default connect(mapStateToProps, mapDispatchToProps)(registerUser);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/FormRegister.js"],"names":["React","Component","reduxForm","Field","connect","thunks","renderField","callCheck","checkAuth","FORM","FormWrapper","HeaderLarge","FormRegister","handleSubmit","data","props","registerUser","submitting","errors","email","author","password","color","mapDispatchToProps","dispatch","mapStateToProps","state","form"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk/auth\";\nimport renderField from \"../components/Input\";\nimport { callCheck } from \"../routes/routes\";\nimport { checkAuth } from \"../utils/checkAuth\";\nimport { FORM, FormWrapper, HeaderLarge } from \"../styles/styles\";\n\n\nclass FormRegister extends Component {\n  constructor() {\n    super();\n\n  }\n\n\n  componentDidMount() {\n    callCheck();\n    checkAuth()\n  }\n\n\n\n\n  handleSubmit = async data => {\n    await this.props.registerUser(data);\n  };\n\n\n  render() {\n    const { handleSubmit, submitting } = this.props;\n    const { email, author, password } = this.props.errors;\n\n    return (\n      <FormWrapper className=\"Form\">\n        <HeaderLarge> Register Form </HeaderLarge>\n        <FORM onSubmit={handleSubmit(this.handleSubmit)}>\n          <Field type=\"text\" label=\"Email\" name=\"email\" component={renderField} />\n          <span style={{ color: \"red\" }} > {email} </span>\n          <Field type=\"password\" label=\"Password\" name=\"password\" component={renderField} />\n          <span style={{ color: \"red\" }}> {password}</span>\n          {/* <Field type=\"password\" label=\"confirm Password\" name=\"confirmPassword\"\n            component={renderField} /> */}\n          <span style={{ color: \"red\" }}> {password}</span>\n          <Field type=\"author\" label=\"Author\" name=\"author\" component={renderField} />\n          <span style={{ color: \"red\" }}> {author}</span>\n          <input type=\"submit\" disabled={submitting}/>\n        </FORM>\n      </FormWrapper>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registerUser: (data) =>\n      dispatch(thunks.registerUser(data))\n  };\n}\n\n\nfunction mapStateToProps(state) {\n  return { errors: state.errors.errors }\n}\n\n\nconst registerUser = reduxForm({\n  form: \"registerUser\"\n})(FormRegister);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(registerUser);\n"]},"metadata":{},"sourceType":"module"}