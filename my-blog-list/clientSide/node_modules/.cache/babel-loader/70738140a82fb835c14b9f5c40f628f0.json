{"ast":null,"code":"import _regeneratorRuntime from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/authorBlogs.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport { Link } from \"react-router-dom\";\nimport { AuthorBlogsContainer, HeaderLarge, ViewContainer, ViewTotalContainer, LinksContainer } from \"../styles/styles\";\nimport sprite from \"../img/sprite.svg\"; // \n\nvar AuthorBlogs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthorBlogs, _Component);\n\n  function AuthorBlogs() {\n    var _this;\n\n    _classCallCheck(this, AuthorBlogs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthorBlogs).call(this));\n    _this.getAuthorBlogs =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var authorId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              authorId = _this.props.match.params.id;\n              _context.next = 3;\n              return _this.props.getBlogsForAuthor(authorId);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.decreaseLike =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(blogId) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.getAuthorBlogs();\n\n                _this.props.dislikeBlog({\n                  blogId: blogId\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.increaseLike =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(blogId) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.props.addLike({\n                  blogId: blogId\n                });\n\n              case 2:\n                _this.getAuthorBlogs();\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(AuthorBlogs, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getAuthorBlogs();\n    }\n  }, {\n    key: \"displayAuthor\",\n    value: function displayAuthor() {\n      var authorName = this.props.authorBlogs.map(function (blog) {\n        return blog.name;\n      })[0];\n      return authorName;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(AuthorBlogsContainer, {\n        className: \"AuthorBlogs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(HeaderLarge, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" author \", this.displayAuthor()), this.props.authorBlogs.map(function (blog) {\n        return React.createElement(ViewContainer, {\n          style: {\n            padding: \"2rem\",\n            marginLeft: \"2rem\",\n            marginRight: \"2rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"  text : \", blog.text, \" \"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \" updated time : \", blog.updated_at, \" \"), React.createElement(ViewTotalContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \" likes : \", blog.totalLikes, \"  \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \" total comments : \", blog.totalComments, \"  \")), React.createElement(LinksContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"svg\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"use\", {\n          xlinkHref: \"\".concat(sprite, \"#icon-like\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })), React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/comments/\".concat(blog.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"add Commit \")), React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/viewcomments/\".concat(blog.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"view Commits \"))));\n      })));\n    }\n  }]);\n\n  return AuthorBlogs;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    authorBlogs: state.profile.authorsBlogs\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getBlogsForAuthor: function getBlogsForAuthor(authorId) {\n      return dispatch(thunks.getBlogsForAuthor(authorId));\n    },\n    dislikeBlog: function dislikeBlog(blogId) {\n      return dispatch(thunks.dislikeBlog(blogId));\n    },\n    addLike: function addLike(blogId) {\n      return dispatch(thunks.addLike(blogId));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorBlogs);","map":{"version":3,"sources":["/home/moral/Documents/home-projects/my-blog-list/clientSide/setup/src/container/authorBlogs.js"],"names":["React","Component","connect","thunks","Link","AuthorBlogsContainer","HeaderLarge","ViewContainer","ViewTotalContainer","LinksContainer","AuthorBlogs","getAuthorBlogs","authorId","props","match","params","id","getBlogsForAuthor","decreaseLike","blogId","dislikeBlog","increaseLike","addLike","authorName","authorBlogs","map","blog","name","displayAuthor","padding","marginLeft","marginRight","text","updated_at","totalLikes","totalComments","sprite","mapStateToProps","state","profile","authorsBlogs","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../action/thunk\";\nimport { Link } from \"react-router-dom\";\nimport { AuthorBlogsContainer, HeaderLarge, ViewContainer, ViewTotalContainer, LinksContainer } from \"../styles/styles\";\nimport sprite from \"../img/sprite.svg\"\n\n// \n\nclass AuthorBlogs extends Component {\n    constructor() {\n        super()\n    }\n\n\n    componentWillMount() {\n        this.getAuthorBlogs();\n    }\n\n\n\n    getAuthorBlogs = async () => {\n        const authorId = this.props.match.params.id;\n        await this.props.getBlogsForAuthor(authorId);\n    }\n\n\n    displayAuthor() {\n        const authorName = this.props.authorBlogs.map(blog => {\n            return blog.name\n        })[0];\n        return authorName;\n    }\n\n    decreaseLike = async (blogId) => {\n        this.getAuthorBlogs()\n        this.props.dislikeBlog({ blogId });\n    }\n\n\n    increaseLike = async (blogId) => {\n        await this.props.addLike({ blogId });\n        this.getAuthorBlogs();\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <AuthorBlogsContainer className=\"AuthorBlogs\">\n\n                    <HeaderLarge> author {this.displayAuthor()}\n                    </HeaderLarge>\n                    {this.props.authorBlogs.map(blog => {\n                        return (\n                            <ViewContainer style={{\n                                padding: \"2rem\",\n                                marginLeft: \"2rem\",\n                                marginRight: \"2rem\"\n\n                            }}>\n                                <p>  text : {blog.text} </p>\n                                <span> updated time : {blog.updated_at} </span>\n                                <ViewTotalContainer>\n                                    <p> likes : {blog.totalLikes}  </p>\n                                    <p> total comments : {blog.totalComments}  </p>\n                                </ViewTotalContainer>\n                                <LinksContainer>\n                                    <svg>\n                                        <use xlinkHref={`${sprite}#icon-like`} />\n\n                                    </svg>\n                                    {/* <button onClick={() => this.increaseLike(blog.id)}>  like </button> */}\n\n                                    <a href=\"#\">\n                                        <Link to={`/comments/${blog.id}`}>\n                                            add Commit </Link>\n                                    </a>\n\n                                    <a href=\"#\">\n                                        <Link to={`/viewcomments/${blog.id}`}>\n                                            view Commits </Link>\n                                    </a>\n                                </LinksContainer>\n                            </ViewContainer>\n                        );\n                    })}\n                </AuthorBlogsContainer>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authorBlogs: state.profile.authorsBlogs\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getBlogsForAuthor: (authorId) => dispatch(thunks.getBlogsForAuthor(authorId)),\n        dislikeBlog: (blogId) => dispatch(thunks.dislikeBlog(blogId)),\n        addLike: (blogId) => dispatch(thunks.addLike(blogId)),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AuthorBlogs);\n"]},"metadata":{},"sourceType":"module"}